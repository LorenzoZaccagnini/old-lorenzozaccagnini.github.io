<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Thorrwulf</title><link>https://lorenzozaccagnini.github.io/posts/</link><description>Recent content in Posts on Thorrwulf</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Lorenzo Zaccagnini- [Creative Commons Attribution 4.0 International License](https://creativecommons.org/licenses/by/4.0/).</copyright><lastBuildDate>Sat, 22 Oct 2022 00:03:47 +0200</lastBuildDate><atom:link href="https://lorenzozaccagnini.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Develop an Ethereum oracle with Rust</title><link>https://lorenzozaccagnini.github.io/posts/simple-rust-oracle/</link><pubDate>Sat, 22 Oct 2022 00:03:47 +0200</pubDate><guid>https://lorenzozaccagnini.github.io/posts/simple-rust-oracle/</guid><description>A blockchain oracle is a service that allows smart contracts to interact with external data sources. In this post, we will develop a simple oracle that will track every time a Ethereum Name Service NFT is transferred. We will use Rust and the web3 crate to interact with the Ethereum blockchain.
1. Why blockchains can&amp;rsquo;t access external data sources Blockchains can&amp;rsquo;t access external data sources natively because it is a deterministic system.</description></item><item><title>Develop a Soulbound NFT using Foundry and Slither</title><link>https://lorenzozaccagnini.github.io/posts/soulbound-nft/</link><pubDate>Tue, 16 Aug 2022 00:03:47 +0200</pubDate><guid>https://lorenzozaccagnini.github.io/posts/soulbound-nft/</guid><description>Today we will develop a Soulbound NFT, an NFT that can be only minted and not traded or transferred, it is bounded to the first owner. We&amp;rsquo;ll do it using foundry with hardhat integrated. The Github workflow will test (foundry solidity and hardhat typescript) the contracts and uses Slither to statically analyze the code, trying to find the most common vulnerabilities.
You can find all the code used in my repository here</description></item></channel></rss>